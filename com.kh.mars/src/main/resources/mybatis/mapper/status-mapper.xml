<?xml version="1.0" encoding="UTF-8"?>

 <!-- 
 	mapper 파일은 특정 테이블에 대한 SQL 구문을 보관하는 파일이다
 	- myBatis를 이용하는 개발자는 이곳에 저장된 SQL 구문을 "아이디"를 이용해서 호출한다
 	- 파일마다 동일한 아이디로 인해 발생하는 충돌을 방지하기 위해 고유한 namespace를 사용한다 
 	- 만약 namespace가 olympic이고 구문 ID가 list라면 외부에서는 olympic.list로 호출한다
 	- 일반적으로 namespace는 테이블명으로 한다!
 	- mapper 내부에는 다음 종류 태그로 구문을 저장할 수 있다.
 		- <insert>
 		- <select>
 		- <update>
 		- <delete>
 	- 각 구문은 반드시 아이디를 가져야 한다.
 	- 각 구문에는 다음과 같은 속정을 작성할 수 있다
 		- parameterType : 해당 구문이 실행되기 위해 필요한 데이터의 자료형(1개만 작성 가능, 선택)
 		- resultType : 해당 구문의 실행 결과를 변환하기 위한 자료형(1개만 작성 가능, 필수)
 			- (주의) List이든 아니든 DTO의 형태를 작성한다(모르는 부분을 작성한다)
 	- 각 구문에는 데이터를 다음과 같이 바인딩할 수 있다
 		- 정적 바인딩 : ${이름} 형태로 작성하면 어떠한 추가 작업도 없이 해당 위치에 데이터가 그대로 작성된다
 		- 동적 바인딩 : #{이름} 형태로 작성하면 자동으로 자료형에 맞게 해당 데이터를 추출하여 작성해준다(DTO 변수명)
  -->

 <!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="status">
	<!-- 성별별 가입현황-->
	<select id="joinGender" resultType="JoinGenderVO">
		select count(*) as count, member_gender,
		case when member_gender = 0 then '남성'
        	 when member_gender = 1 then '여성' end as gender
		from member group by member_gender
	</select>
	
	<!-- 전체 회원 관심사 -->
	<select id="memberInterest" resultType="MemberInterestVO">
		select  '없음' "member_interest", count(*) as count
		from member where member_interest is null group by member_interest
		union
		select member_interest , count(*) as count
		from member where member_interest is not null group by member_interest
	</select>
	
	<!-- 남성 관심사 -->
	<select id="manInterest" resultType="MemberInterestVO">
		select member_interest, count(*) as count 
		from member where member_gender=0 group by member_interest
	</select>
	
	<!-- 여성 관심사 -->
	<select id="womanInterest" resultType="MemberInterestVO">
		select member_interest, count(*) as count 
		from member where member_gender=1 group by member_interest
	</select>
	
	<!-- 유형별 광고수 -->
	<select id="interestAd" resultType="AdStatusVO">
		select m.member_interest, count(ba.board_ad_no) as count from board_ad ba 
		inner join member m on ba.member_no=m.member_no group by m.member_interest
	</select>
	
	<!-- 광고별 매출액 -->
	<select id="adSum" resultType="AdStatusVO">
		select m.member_interest, sum(ba.board_ad_price) as sum from board_ad ba 
		inner join member m on ba.member_no=m.member_no group by m.member_interest 
	</select>
	
	
 </mapper> 