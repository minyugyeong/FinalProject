<?xml version="1.0" encoding="UTF-8"?>

 <!-- 
 	mapper 파일은 특정 테이블에 대한 SQL 구문을 보관하는 파일이다
 	- myBatis를 이용하는 개발자는 이곳에 저장된 SQL 구문을 "아이디"를 이용해서 호출한다
 	- 파일마다 동일한 아이디로 인해 발생하는 충돌을 방지하기 위해 고유한 namespace를 사용한다 
 	- 만약 namespace가 olympic이고 구문 ID가 list라면 외부에서는 olympic.list로 호출한다
 	- 일반적으로 namespace는 테이블명으로 한다!
 	- mapper 내부에는 다음 종류 태그로 구문을 저장할 수 있다.
 		- <insert>
 		- <select>
 		- <update>
 		- <delete>
 	- 각 구문은 반드시 아이디를 가져야 한다.
 	- 각 구문에는 다음과 같은 속정을 작성할 수 있다
 		- parameterType : 해당 구문이 실행되기 위해 필요한 데이터의 자료형(1개만 작성 가능, 선택)
 		- resultType : 해당 구문의 실행 결과를 변환하기 위한 자료형(1개만 작성 가능, 필수)
 			- (주의) List이든 아니든 DTO의 형태를 작성한다(모르는 부분을 작성한다)
 	- 각 구문에는 데이터를 다음과 같이 바인딩할 수 있다
 		- 정적 바인딩 : ${이름} 형태로 작성하면 어떠한 추가 작업도 없이 해당 위치에 데이터가 그대로 작성된다
 		- 동적 바인딩 : #{이름} 형태로 작성하면 자동으로 자료형에 맞게 해당 데이터를 추출하여 작성해준다(DTO 변수명)
  -->

 <!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="dm">
 	<!-- room sequence -->
 	<select id="roomSequence" resultType="int">
 		select room_seq.nextval from dual
 	</select>
 	
 	<!-- dm sequence -->
 	<select id="dmSequence" resultType="int">
 		select dm_seq.nextval from dual
 	</select>
 	
 	<!-- 참가자 등록 -->
	<insert id="insertRoomEnter" parameterType="RoomEnterDto">
		insert into room_enter (member_no, room_no, room_enter_time, room_enter_is)
		values (#{memberNo}, #{roomNo}, sysdate)
	</insert>
	
	<!-- 메세지 등록 -->
	<insert id="insertDm" parameterType="DmDto">
		insert into dm (dm_no, dm_content)
		values (#{dmNo}, #{dmContent})
	</insert>
	
	<!-- 메세지 기록 등록 -->
	<insert id="insertRecord" parameterType="DmRecordDto">
		insert into dm_record (dm_no, who, room_no, target, dm_record_time, dm_record_check)
		values (#{dmNo}, #{who}, #{roomNo}, #{target}, sysdate, #{dmRecordCheck})
	</insert>
	
	
	<!-- 메시지 리스트 마지막 content 조회 -->
	<select id="roomList" parameterType="int" resultType="RoomVO">
		select final.*, m.member_nick from (
	    select ac.*, dm.dm_content from (
	    select aaa.member_no, aaa.room_no, aaa.room_enter_is, bbb.dm_no, bbb.dm_record_time, bbb.target from (
	    select aa.*, bb."dm_no" from (
	    select ff.room_enter_is ,fa.member_no, fa.room_no from (
	    select room_no, room_enter_is from room_enter where member_no = #{memberNo}
	    )ff inner join room_enter fa on ff.room_no = fa.room_no where fa.member_no != #{memberNo}
	    )aa inner join (select room.room_no, max(dm_record.dm_no) "dm_no" from room inner join dm_record on room.room_no = dm_record.room_no group by room.room_no)
	    bb on aa.room_no = bb.room_no
	    )aaa inner join dm_record bbb on aaa."dm_no" = bbb.dm_no
	    )ac inner join dm on ac.dm_no = dm.dm_no
		)final inner join member m on final.member_no = m.member_no
	</select>
	
	<!-- 메세지 상세조회 -->
	<select id="roomDetail" parameterType="map" resultType="RoomRecordVO">
		select c.*, dm.dm_content from (
	    select a.* from (
	    select * from dm_record where room_no = #{roomNo}
	    )a inner join (select * from room_enter where member_no = #{memberNo})b on a.room_no = b.room_no where a.dm_record_time >= b.room_enter_time
		)c inner join dm on c.dm_no = dm.dm_no
	</select>
	
 </mapper> 