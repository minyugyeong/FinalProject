<?xml version="1.0" encoding="UTF-8"?>

 <!-- 
 	mapper 파일은 특정 테이블에 대한 SQL 구문을 보관하는 파일이다
 	- myBatis를 이용하는 개발자는 이곳에 저장된 SQL 구문을 "아이디"를 이용해서 호출한다
 	- 파일마다 동일한 아이디로 인해 발생하는 충돌을 방지하기 위해 고유한 namespace를 사용한다 
 	- 만약 namespace가 olympic이고 구문 ID가 list라면 외부에서는 olympic.list로 호출한다
 	- 일반적으로 namespace는 테이블명으로 한다!
 	- mapper 내부에는 다음 종류 태그로 구문을 저장할 수 있다.
 		- <insert>
 		- <select>
 		- <update>
 		- <delete>
 	- 각 구문은 반드시 아이디를 가져야 한다.
 	- 각 구문에는 다음과 같은 속정을 작성할 수 있다
 		- parameterType : 해당 구문이 실행되기 위해 필요한 데이터의 자료형(1개만 작성 가능, 선택)
 		- resultType : 해당 구문의 실행 결과를 변환하기 위한 자료형(1개만 작성 가능, 필수)
 			- (주의) List이든 아니든 DTO의 형태를 작성한다(모르는 부분을 작성한다)
 	- 각 구문에는 데이터를 다음과 같이 바인딩할 수 있다
 		- 정적 바인딩 : ${이름} 형태로 작성하면 어떠한 추가 작업도 없이 해당 위치에 데이터가 그대로 작성된다
 		- 동적 바인딩 : #{이름} 형태로 작성하면 자동으로 자료형에 맞게 해당 데이터를 추출하여 작성해준다(DTO 변수명)
  -->

 <!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="follow">

	<select id="recommend" resultType="FollowRecommendVO" parameterType="int">
		select * from(
		    select * from (
		        select abcd.*, mp.attach_no "target_attach" from (
		        select abc.follow_target, abc."target_nick", abc."followcount", mm.member_nick "who_nick" from (
		        select ab.*, m.member_nick"target_nick" from (
		        select a.follow_target, b."followcount", min(a.follow_who) "who_no" from (
		        select follow.* from (
		        select follow_target from follow where follow_who = #{memberNo})a inner join follow on a.follow_target = follow.follow_who 
		        where not follow.follow_target in (select follow_target from follow where follow_who = #{memberNo}) and not follow.follow_target in #{memberNo}
		        )a
		        inner join (
		        select follow.follow_target, (count(*)-1) "followcount" from (
		        select follow_target from follow where follow_who = #{memberNo})a inner join follow on a.follow_target = follow.follow_who 
		        where not follow.follow_target in (select follow_target from follow where follow_who = #{memberNo}) and not follow.follow_target in #{memberNo}
		        group by follow.follow_target
		        )b 
		        on a.follow_target = b.follow_target 
		        group by a.follow_target, b."followcount"
		        )ab
		        inner join (
		        select * from member where member_private = 0
                minus
                select m.* from member m left outer join block b on b.member_no = m.member_no where b.block_no = #{memberNo}
		        ) m on m.member_no = ab.follow_target
		        )abc
		        inner join member mm on mm.member_no = abc."who_no"
				)abcd left outer join member_profile mp on abcd.follow_target = mp.member_no    
		    ) order by DBMS_RANDOM.value
		    <![CDATA[
		) where rownum <= 5
		    ]]>
	</select>
	
	<select id="followCount" parameterType="int" resultType="int">
		select count(*)follow_target from follow where follow_who = #{memberNo} AND follow_confirm = 1
	</select>
	
	<select id="followerCount" parameterType="int" resultType="int">
		select count(*)follow_who from follow where follow_target = #{memberNo} AND follow_confirm = 1
	</select>
	
	<select id="followList" resultType="followVO" parameterType="int">
		select abc.*, mp.attach_no from (
		    select aa.member_no, aa.member_nick from (
		    select follow_target from follow where follow_who = #{memberNo} AND follow_confirm = 1)ab inner join member aa on ab.follow_target = aa.member_no
		)abc left outer join member_profile mp on abc.member_no = mp.member_no
	</select>
	
	<select id="followerList" resultType="followerVO" parameterType="int">
		SELECT FM.*,mp.attach_no from(
			SELECT M.member_no, M.member_nick from(
			SELECT follow_who FROM FOLLOW WHERE follow_target = #{memberNo} AND follow_confirm = 1)F INNER JOIN MEMBER M ON F.follow_who = M.MEMBER_NO
		)FM LEFT OUTER JOIN member_profile mp ON FM .member_no = mp.member_no
	</select>
	
	<update id="follow" parameterType="Map">
		insert into follow(follow_who, follow_target, follow_confirm) values(#{followWho}, #{memberNo}, #{followConfirm})
	</update>
	
	<delete id="followDelete" parameterType="Map">
		delete follow where follow_who = #{followWho} and follow_target = #{memberNo}
	</delete>
	
	<select id="one" resultType="FollowDto" parameterType="map">
		select * from follow where follow_who = #{followWho} and follow_target = #{memberNo}
	</select>
	
	<select id="isFollower" resultType="FollowDto" parameterType="map">
		select * from follow where follow_who = #{followWho} and follow_target = #{memberNo} and follow_confirm = #{followConfirm}
	</select>
	
	<select id="blockFollowCheck" resultType="FollowDto" parameterType="Map">
		select * from follow where follow_who = #{followWho} and follow_target = #{memberNo}
	</select>
	
	<select id="blockFollowingCheck" resultType="FollowDto" parameterType="Map">
		select * from follow where follow_who = #{memberNo} and follow_target = #{followWho}
	</select>
	
	<delete id="followingDelete" parameterType="Map">
		delete follow where follow_who = #{memberNo} and follow_target = #{followWho}
	</delete>
	
	<update id="open" parameterType="int">
		UPDATE follow SET follow_confirm = 1 WHERE FOLLOW_TARGET = #{memberNo}
	</update>

 </mapper> 